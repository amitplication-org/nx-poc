{
  "name": "server",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/server/src",
  "projectType": "application",
  "targets": {
    "install": {
      "executor": "nx:run-commands",
      "inputs": [
        "{projectRoot}/package.json",
        "{projectRoot}/package-lock.json"
      ],
      "outputs": ["{projectRoot}/node_modules"],
      "options": {
        "commands": ["npm i"],
        "parallel": false,
        "cwd": "apps/server"
      }
    },
    "prisma:generate": {
      "executor": "nx:run-commands",
      "options": {
        "command": "npx prisma generate",
        "cwd": "apps/server"
      }
    },
    "db:prisma:studio": {
      "executor": "nx:run-commands",
      "options": {
        "command": "npx prisma studio",
        "cwd": "apps/server"
      }
    },
    "db:migrate:dev": {
      "executor": "nx:run-commands",
      "options": {
        "command": "npx prisma migrate dev",
        "cwd": "apps/server"
      }
    },
    "db:migrate:deploy": {
      "executor": "nx:run-commands",
      "options": {
        "command": "npx prisma migrate deploy",
        "cwd": "apps/server"
      }
    },
    "db:migrate:rollback": {
      "executor": "nx:run-commands",
      "options": {
        "command": "npx prisma migrate resolve --rolled-back",
        "cwd": "apps/server"
      }
    },
    "db:init": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["nx db:migrate:dev", "nx db:migrate:deploy","nx db:seed"],
        "parallel": false,
        "cwd": "apps/server"
      }
    },
    "db:seed": {
      "executor": "nx:run-commands",
      "options": {
        "command": "ts-node scripts/seed.ts",
        "cwd": "apps/server"
      }
    },
    "db:clean": {
      "executor": "nx:run-commands",
      "options": {
        "command": "ts-node scripts/clean.ts",
        "cwd": "apps/server"
      }
    },
    "docker:db": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker-compose -f docker-compose.db.yml up -d",
        "cwd": "apps/server"
      }
    },
    "docker:build": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker build .",
        "cwd": "apps/server"
      }
    },
    "compose:up": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker-compose up -d",
        "cwd": "apps/server"
      }
    },
    "compose:down": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker-compose down --volumes",
        "cwd": "apps/server"
      }
    },
    "build": {
      "executor": "@nrwl/webpack:webpack",
      "outputs": ["{options.outputPath}"],
      "options": {
        "target": "node",
        "compiler": "tsc",
        "outputPath": "dist/apps/server",
        "main": "apps/server/src/main.ts",
        "tsConfig": "apps/server/tsconfig.app.json",
        "assets": ["apps/server/src/assets"]
      },
      "configurations": {
        "production": {
          "optimization": true,
          "extractLicenses": true,
          "inspect": false,
          "fileReplacements": [
            {
              "replace": "apps/server/src/environments/environment.ts",
              "with": "apps/server/src/environments/environment.prod.ts"
            }
          ]
        }
      }
    },
    "serve": {
      "executor": "@nrwl/node:node",
      "options": {
        "buildTarget": "server:build"
      },
      "configurations": {
        "production": {
          "buildTarget": "server:build:production"
        }
      }
    },
    "lint": {
      "executor": "@nrwl/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["apps/server/**/*.ts"]
      }
    },
    "test": {
      "executor": "@nrwl/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "jestConfig": "apps/server/jest.config.ts",
        "passWithNoTests": true
      }
    }
  },
  "tags": []
}
